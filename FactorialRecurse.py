'''
Сформувати функцію, що буде обчислювати факторіал заданого користувачем
натурального числа n.
Виконав : Канюка Р. 122В
'''
import sys
from memory_profiler import memory_usage
from datetime import datetime
def factorial(n):
    '''Метод знаходження факторіала 

        n - значення для факторіалування
    '''
    #Умова виходу рекурсії
    if n == 1 or n == 0 : return 1
    #Завдання рекурсії
    return n * factorial(n-1)

while True:
    
    #Ініціалізація змінної n
    while True:
            try:
                n = int(input("Введіть n : "))
                if(n >= 0):
                    break
                else : print("Факторіала відємного числа не існує.")
            except ValueError :
                print('Введіть число')
    sys.setrecursionlimit(6000)
    start = datetime.now()
    #Запуск алгоритму
    print("Результат =", factorial(n))
    print("Кількість використаних МБ :",memory_usage())
    print("Затрачений час :",datetime.now() - start)
    quest = input('Завершити програму? Y/N : ')
    if(quest == 'Y' or quest == 'y'):
        break
'''
    Час розробки : 4 хвилин
    Попри те ,що рекурсивний алгоритм має зовсім невеликі гірші
    показники витрат часу та часу розробки при роботі з невеликими значенями
    він є гарним прикладом відображення принципу роботи рекурсії(прикладом).
    Порівнянно з ітераційним методом рекурсивний метод має гірші показники в часі при роботі з великими значеннями .
'''
    
